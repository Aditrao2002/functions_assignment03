# -*- coding: utf-8 -*-
"""Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/intro.ipynb
"""

def sum_of_even_numbers(numbers):
    return sum(number for number in numbers if number % 2 == 0)

# Example usage
nums = [1, 2, 3, 4, 5, 6]
print(sum_of_even_numbers(nums))  # Output: 12

#Q.2
def reverse_string(s):
    return s[::-1]

# Example usage
print(reverse_string("hello"))  # Output: "olleh"

#Q.3
def square_numbers(numbers):
    return [x ** 2 for x in numbers]

# Example usage
nums = [1, 2, 3, 4]
print(square_numbers(nums))  # Output: [1, 4, 9, 16]

def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

# Example usage: Check all primes between 1 and 200
primes = [n for n in range(1, 201) if is_prime(n)]
print(primes)  # Output: List of prime numbers from 1 to 200

class FibonacciIterator:
    def __init__(self, max_terms):
        self.max_terms = max_terms
        self.a, self.b = 0, 1
        self.count = 0

    def __iter__(self):
        return self

    def __next__(self):
        if self.count >= self.max_terms:
            raise StopIteration
        fib = self.a
        self.a, self.b = self.b, self.a + self.b
        self.count += 1
        return fib

# Example usage
fib_iter = FibonacciIterator(10)
for num in fib_iter:
    print(num, end=" ")  # Output: Fibonacci sequence

def powers_of_two(max_exp):
    for exp in range(max_exp + 1):
        yield 2 ** exp

# Example usage
for power in powers_of_two(5):
    print(power)  # Output: 1, 2, 4, 8, 16, 32

def read_file_line_by_line(file_path):
    with open(file_path, 'r') as file:
        for line in file:
            yield line.strip()

# Example usage
 for line in read_file_line_by_line('example.txt'):
     print(line)

tuples_list = [(1, 'a'), (3, 'c'), (2, 'b')]
sorted_list = sorted(tuples_list, key=lambda x: x[1])

# Example usage
print(sorted_list)  # Output: [(1, 'a'), (2, 'b'), (3, 'c')]

def celsius_to_fahrenheit(celsius_list):
    return list(map(lambda c: (c * 9/5) + 32, celsius_list))

# Example usage
celsius = [0, 20, 30, 40]
fahrenheit = celsius_to_fahrenheit(celsius)
print(fahrenheit)  # Output: [32.0, 68.0, 86.0, 104.0]

def remove_vowels(s):
    vowels = "aeiouAEIOU"
    return ''.join(filter(lambda char: char not in vowels, s))

# Example usage
sentence = "This is a test sentence."
no_vowels = remove_vowels(sentence)
print(no_vowels)  # Output: "Ths s  tst sntnc."
def remove_vowels(s):
    vowels = "aeiouAEIOU"
    return ''.join(filter(lambda char: char not in vowels, s))

# Example usage
sentence = "This is a test sentence."
no_vowels = remove_vowels(sentence)
print(no_vowels)  # Output: "Ths s  tst sntnc."